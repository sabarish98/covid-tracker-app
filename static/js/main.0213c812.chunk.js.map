{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaimage","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0213c812.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bknn\",\"card\":\"Cards_card__3B6yy\",\"infected\":\"Cards_infected__yq-NZ\",\"recovered\":\"Cards_recovered__3vwJv\",\"deaths\":\"Cards_deaths__2lQkY\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n const Cards = ( {data:     {confirmed,recovered,deaths,lastUpdate} } ) =>{\r\n     if (!confirmed){\r\n         return 'Loading!!!';\r\n     }\r\n          return(\r\n        <div className ={styles.container}>\r\n                <Grid container spacing = {3} justify = \"center\">\r\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                        <CardContent>\r\n                            <Typography color =\"textSecondary\" gutterBottom>Infected</Typography>\r\n                            <Typography variant=\"h5\">\r\n                                <CountUp start = {0} end={confirmed.value} duration = {2.5} separator = \",\"/>\r\n                            </Typography>\r\n                            <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant = \"body2\">Number of active COVID 19 Cases</Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                        <CardContent>\r\n                            <Typography color =\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                            <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={recovered.value} duration = {2.5} separator = \",\"/>\r\n                            </Typography>\r\n                            <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant = \"body2\">Number of recovered COVID 19 Cases</Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                        <CardContent>\r\n                            <Typography color =\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                            <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={deaths.value} duration = {2.5} separator = \",\"/>\r\n                            </Typography>\r\n                            <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant = \"body2\">Number of deaths caused by COVID 19</Typography>\r\n                        </CardContent>\r\n                    </Grid> \r\n                </Grid>\r\n        </div>\r\n     );\r\n }\r\n export default Cards;","import axios from 'axios';\r\n const url = \"https://covid19.mathdro.id/api\";\r\n export const fetchData = async(country) =>{\r\n     let changeableUrl = url;\r\n     if(country){\r\n         changeableUrl = `${url}/countries/${country}`\r\n     }\r\n     try{\r\n        const {data:{ confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        \r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n     }catch(error){\r\n        return error;\r\n     }\r\n\r\n };\r\n export const fetchDailyData = async() =>{\r\n     try{\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n     }catch(error){\r\n        return error;\r\n     }\r\n };\r\n  export const fetchCountries = async() =>{\r\n      try{\r\n        const {data: { countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name);\r\n      }\r\n      catch(error){\r\n          return error;\r\n      }\r\n  }","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) =>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n     useEffect(() =>{\r\n            const fetchAPI = async() =>{\r\n                setDailyData(await fetchDailyData());\r\n            }\r\n            fetchAPI();\r\n     },[]);\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n            <Line\r\n             data={{\r\n                 labels: dailyData.map(({date})=> date),\r\n                 datasets: [{\r\n                    data: dailyData.map(({confirmed})=> confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                 },\r\n                 {\r\n                    data: dailyData.map(({deaths})=> deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n\r\n                 },\r\n                ],\r\n\r\n             }}\r\n            />\r\n         ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n        <Bar\r\n            data = {{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options ={{\r\n                legend: {display: false},\r\n                title: {display:true,text: `Current state in ${country}`},\r\n            }}\r\n        />\r\n        ): null\r\n    );\r\n     return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n     );\r\n};\r\n export default Chart;","import React,{ useState,useEffect } from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n const CountryPicker = ({handleCountryChange}) =>{\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async() =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    console.log()\r\n     return(\r\n         <FormControl className = {styles.formControl}>\r\n             <NativeSelect defaultValue = \"\" onChange = {(e) => handleCountryChange(e.target.value)}>\r\n                 <option value=\"\">Global</option>\r\n                 {fetchedCountries.map((country, i) => <option key = {i} value={country}>{country}</option>)}\r\n             </NativeSelect>\r\n         </FormControl>\r\n     )\r\n }\r\n export default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaimage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\nstate = {\r\n    data: {},\r\n    country: '',\r\n}\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n    }\r\n    handleCountryChange = async(country) =>{\r\n        console.log(country);\r\n        //fetch the data\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        //set the state\r\n        this.setState({data: fetchedData, country: country});\r\n\r\n    }\r\n    render(){\r\n        const {data, country} = this.state;\r\n        return(<div className = {styles.container}>\r\n            <img src={coronaimage} alt='Covid19' className={styles.image}/>\r\n            <Cards data={data}/>\r\n            <CountryPicker handleCountryChange={ this.handleCountryChange }/>\r\n            <Chart data={data} country={country}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__GZ7AE\",\"image\":\"App_image__2bFFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__sX1XR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__26ubT\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}